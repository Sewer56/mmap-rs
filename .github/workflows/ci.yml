name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [windows-2019, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build
    - name: Run tests
      run: cargo test

  aarch64-unknown-linux-gnu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
        target: aarch64-unknown-linux-gnu
    - name: Install aarch64 QEMU and toolchain
      run: |
        sudo apt update
        sudo apt -y install qemu-user qemu-user-static gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu binutils-aarch64-linux-gnu-dbg
    - name: Append .cargo config
      run: |
        echo "[target.aarch64-unknown-linux-gnu]" >> ~/.cargo/config
        echo "runner = \"qemu-aarch64 -L /usr/aarch64-linux-gnu/\"" >> ~/.cargo/config
        echo "linker = \"aarch64-linux-gnu-gcc\"" >> ~/.cargo/config
    - name: Build
      run: cargo build --target aarch64-unknown-linux-gnu
    - name: Examples
      run: |
        cargo run --target aarch64-unknown-linux-gnu --example areas
        cargo run --target aarch64-unknown-linux-gnu --example map_anon

  freebsd:
    runs-on: macos-12
    strategy:
      matrix:
        os:
        - release: '13.1'
        - release: '12.3'

    steps:
    - uses: actions/checkout@v3
    - name: Build (freebsd-${{ matrix.os.release }})
      uses: vmactions/freebsd-vm@v0
      with:
        release: ${{ matrix.os.release }}
        envs: 'RUSTFLAGS'
        usesh: true
        prepare: |
          pkg install -y curl
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- --profile minimal -y
          . "$HOME/.cargo/env"
          cargo build
          cargo test

  aarch64-apple-ios:
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v3
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
        target: aarch64-apple-ios
    - name: Build
      run: cargo build --target aarch64-apple-ios

#  bsd:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        os:
#        - name: freebsd
#          version: '13.0'
#        - name: freebsd
#          version: '12.2'
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Build (${{ matrix.os.name }}
#      uses: cross-platform-actions/action@v0.6.2
#      with:
#        operating_system: ${{ matrix.os.name }}
#        version: ${{ matrix.os.version }}
#        shell: bash
#        run: |
#          set -e
#          curl https://sh.rustup.rs -sSf | sh -s -- --profile minimal -y
#          source "$HOME/.cargo/env"
#          cargo build --verbose
#          cargo test --verbose
