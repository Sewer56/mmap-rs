name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [windows-2019, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  aarch64-unknown-linux-gnu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
        target: aarch64-unknown-linux-gnu
    - name: Install aarch64 QEMU and toolchain
      run: |
        sudo apt update
        sudo apt -y install qemu-user qemu-user-static gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu binutils-aarch64-linux-gnu-dbg
    - name: Create .cargo directory
      run: mkdir ${{env.home}}/.cargo
    - name: Write .cargo config
      uses: DamianReeves/write-file-action
      with:
        path: ${{env.home}}/.cargo/config
        contents: |
          [target.aarch64-unknown-linux-gnu]
          runner = "qemu-aarch64 -L /usr/aarch64-linux-gnu/"
          linker = "aarch64-linux-gnu-gcc"
        write-mode: append
    - name: Build
      run: cargo build --verbose --target aarch64-unknown-linux-gnu
    - name: Examples
      run: |
        cargo run --target aarch64-unknown-linux-gnu --example areas
        cargo run --target aarch64-unknown-linux-gnu --example map_anon
