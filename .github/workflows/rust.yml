name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [windows-2019, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  aarch64-unknown-linux-gnu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
        target: aarch64-unknown-linux-gnu
    - name: Install aarch64 QEMU and toolchain
      run: |
        sudo apt update
        sudo apt -y install qemu-user qemu-user-static gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu binutils-aarch64-linux-gnu-dbg
    - name: Append .cargo config
      run: |
        echo "[target.aarch64-unknown-linux-gnu]" >> ~/.cargo/config
        echo "runner = \"qemu-aarch64 -L /usr/aarch64-linux-gnu/\"" >> ~/.cargo/config
        echo "linker = \"aarch64-linux-gnu-gcc\"" >> ~/.cargo/config
    - name: Build
      run: cargo build --verbose --target aarch64-unknown-linux-gnu
    - name: Examples
      run: |
        cargo run --target aarch64-unknown-linux-gnu --example areas
        cargo run --target aarch64-unknown-linux-gnu --example map_anon

  bsd:
    runs-on: ubuntu-latest
    strategy: matrix:
      os:
      - name: freebsd
        version: '13.0'
      - name: freebsd
        version: '12.2'

    steps:
    - uses: actions/checkout@v2
    - name: Build (${{ matrix.os.name }}
      uses: cross-platform-actions/action@v0.3.1
      with:
        operating_system: ${{ matrix.os.name }}
        version: ${{ matrix.os.version }}
        shell: bash
        run: |
          pkg install -y curl
          curl https://sh.rustup.rs -sSf | sh -s -- --profile minimal -y
          source "$HOME/.cargo/env"
          cargo build --verbose
          cargo test --verbose
